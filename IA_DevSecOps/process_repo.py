import os
import subprocess
import sys

# üü¢ Chemin des scripts dans ton d√©p√¥t
EXTRACTION_SCRIPT = "extraction.py"
ANALYZE_K8S_SCRIPT = "analyze_k8s.py"
ANALYZE_DOCKERFILE_SCRIPT = "analyze_dockerfile.py"
ANALYZE_TERRAFORM_SCRIPT = "analyze_terraform.py"


def run_script(script_name, repo_url=""):
    """Ex√©cute un script Python avec un d√©p√¥t en entr√©e (si n√©cessaire)."""
    try:
        cmd = ["python3", script_name]
        if repo_url:
            cmd.append(repo_url)

        print(f"üöÄ Ex√©cution de {script_name} {'sur ' + repo_url if repo_url else ''}...")
        result = subprocess.run(cmd, capture_output=True, text=True)

        print(result.stdout)
        if result.stderr:
            print(f"‚ö†Ô∏è Erreur dans {script_name} : {result.stderr}")

    except Exception as e:
        print(f"‚ùå Erreur lors de l'ex√©cution de {script_name} : {e}")


def main():
    # V√©rifier si l'argument du d√©p√¥t est fourni
    if len(sys.argv) < 2:
        print("‚ùå Erreur : Aucun d√©p√¥t fourni en argument.")
        sys.exit(1)

    repo_url = sys.argv[1]

    if not repo_url.startswith("https://github.com/"):
        print("‚ùå URL invalide. Veuillez entrer une URL GitHub valide.")
        sys.exit(1)

    print(f"\nüì• D√©p√¥t soumis : {repo_url}\n")

    # üîπ √âtape 1 : Extraction des fichiers
    run_script(EXTRACTION_SCRIPT, repo_url)

    # üîπ √âtape 2 : Ex√©cution des analyses
    print("\nüîç Analyse des fichiers extraits...\n")
    run_script(ANALYZE_K8S_SCRIPT)
    run_script(ANALYZE_DOCKERFILE_SCRIPT)
    run_script(ANALYZE_TERRAFORM_SCRIPT)

    print("\n‚úÖ Analyse termin√©e. Consultez les rapports g√©n√©r√©s.\n")


if __name__ == "__main__":
    main()
