import React, { useState } from "react";
import { toast } from "react-toastify";
import { MagnifyingGlassIcon, ArrowPathIcon } from "@heroicons/react/24/outline";

const FileScanner = ({ setResult, isLoading, setIsLoading }) => {
  const [file, setFile] = useState(null);
  const [codeInput, setCodeInput] = useState("");

  const handleFileChange = (e) => {
    setFile(e.target.files[0]);
    setCodeInput(""); // Clear code input when a file is selected
  };

  const scanFile = async () => {
    if (!file && !codeInput.trim()) {
      toast.warn("Veuillez sélectionner un fichier ou entrer du code à scanner !", {
        position: "top-right",
        autoClose: 3000,
        theme: "dark",
      });
      return;
    }

    setIsLoading(true);
    try {
      let response;
      if (file) {
        // Handle file upload
        const formData = new FormData();
        formData.append("file", file);
        response = await fetch("http://54.81.86.127:5000/scan-file", {
          method: "POST",
          body: formData,
        });
      } else {
        // Handle code input
        response = await fetch("http://54.81.86.127:5000/scan-file", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ content: codeInput }),
        });
      }

      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.error || "Erreur lors du scan du fichier");
      }

      const data = await response.json();
      setResult(data);
      toast.success("Scan terminé avec succès !", {
        position: "top-right",
        autoClose: 3000,
        theme: "dark",
      });
    } catch (error) {
      toast.error(error.message || "Erreur lors du scan !", {
        position: "top-right",
        autoClose: 3000,
        theme: "dark",
      });
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="bg-gray-800 p-8 rounded-lg shadow-lg w-full max-w-2xl">
      <h2 className="text-2xl font-bold text-gray-100 mb-6 flex items-center gap-2">
        <MagnifyingGlassIcon className="h-7 w-7 text-green-400" />
        Scan de Vulnérabilités - Fichier
      </h2>
      <div className="mb-6">
        <label htmlFor="code-input" className="text-gray-400 text-sm mb-2 block">
          Entrer le code du fichier :
        </label>
        <textarea
          id="code-input"
          value={codeInput}
          onChange={(e) => {
            setCodeInput(e.target.value);
            setFile(null); // Clear file when code is entered
          }}
          className="w-full h-32 p-4 bg-gray-700 text-gray-100 border border-gray-600 rounded-lg resize-none focus:outline-none focus:ring-2 focus:ring-green-500 placeholder-gray-400 transition-all duration-200 font-mono"
          placeholder="Entrez le contenu du fichier ici..."
        />
      </div>
      <div className="mb-6">
        <label htmlFor="file-upload" className="text-gray-400 text-sm mb-2 block">
          Ou sélectionner un fichier :
        </label>
        <input
          id="file-upload"
          type="file"
          onChange={handleFileChange}
          className="w-full text-gray-100 bg-gray-700 border border-gray-600 rounded-lg p-3 file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:text-sm file:font-semibold file:bg-green-600 file:text-white hover:file:bg-green-700"
        />
      </div>
      <button
        onClick={scanFile}
        disabled={isLoading}
        className={`w-full sm:w-auto bg-green-600 text-white px-6 py-3 rounded-lg font-semibold hover:bg-green-700 transition-colors duration-200 flex items-center justify-center gap-2 ${
          isLoading ? "opacity-50 cursor-not-allowed" : ""
        }`}
      >
        {isLoading ? (
          <>
            <ArrowPathIcon className="h-5 w-5 animate-spin" />
            Scan en cours...
          </>
        ) : (
          <>
            <MagnifyingGlassIcon className="h-5 w-5" />
            Scanner
          </>
        )}
      </button>
    </div>
  );
};

export default FileScanner;